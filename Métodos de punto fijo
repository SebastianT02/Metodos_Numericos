import numpy as np
import numpy as np
import matplotlib.pyplot as plt
import math



def puntofijo(gx, a, tolera):
    """
    Función de punto fijo que obtiene la raiz de una función,
    donde se necesita 4 valores iniciales.
    :param gx: función inicial igualada a cero
    :param a: iteracion inicial valor de i
    :param tolera: Dato para el error aceptado al enocntrar la raiz
    :param iteramax: el número de iteraciones a realizar segun el usuario
    :return:
    retorna la raiz de la funcion lambda dada

    """
    try:
        iteramax = int(input("Ingrese el número que desea para las iteraciones de 0 a 15 max: "))
        if iteramax > 15:
            iteramax = int('error')
    except:
        print("Dato mal ingresado, o no soporta")
        iteramax = 15

    i = 1  # iteración
    b = gx(a)
    tramo = abs(b - a)
    while (tramo >= tolera and i <= iteramax):
        a = b
        b = gx(a)
        tramo = abs(b - a)
        i = i + 1
    respuesta = b

    # Validar respuesta
    if (i >= iteramax):
        respuesta = np.nan
    nu_ite = i
    (print("El número de iteraciones fue ", nu_ite))
    return (respuesta)

# INGRESO funciones dadas
fx = lambda x: np.exp(-x) - x
gx = lambda x: np.exp(-x)

#OTRAS FUNCIONES PARA CAMBIAR
#lambda x: math.sin(x)
#lambda x: math.sin(x) + x



a = 0  # INTERVALO
b = 1
tolera = 0.001
iteramax = 15  # ITERACIÓN MÁXIMA

muestras = 51  # DATO DE EXTENSIÓN DEL GRÁFICO
tramos = 50

# PROCEDIMIENTO
respuesta = puntofijo(gx, a, tolera)

# SALIDA
print(respuesta)


# GRAFICA
# CÁLCULO DE LOS PUNTOS F(X) Y G(X)
xi = np.linspace(a,b,muestras)
fi = fx(xi)
gi = gx(xi)
yi = xi

plt.plot(xi,fi, label='f(x)')
plt.plot(xi,gi, label='g(x)')
plt.plot(xi,yi, label='y=x')

if (respuesta!= np.nan):
    plt.axvline(respuesta)
plt.axhline(0, color='k')
plt.title('Punto Fijo')
plt.legend()
plt.show()

